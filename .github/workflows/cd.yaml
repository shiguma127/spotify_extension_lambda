name: Rust Build and Deploy

on:
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  S3_BUCKET_NAME: spotify-extension-src
  LAMBDA_FUNCTION_NAME: arn:aws:lambda:ap-northeast-1:312678712486:function:SpotifyExtension
  CARGO_INCREMENTAL: 1 # rust のincremental build を強制する。

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          # mtimeをコミットの時間で復元したいので 0 にしておく。
          # TODO: 履歴が多くなったら十分大きな値にする。

      - name: use chahe v3
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: setup rust tool chain
        uses: dtolnay/rust-toolchain@stable

      - name: Compile Rust program
        run: cargo build --release

      - name: rename artifact
        run: mv target/release/spotify_extension_lambda bootstrap

      - name: strip & check size, dependencies
        run: |
          strip --strip-all bootstrap
          size bootstrap
          ldd bootstrap

      - name: zip artifact
        run: zip bootstrap.zip bootstrap

      - name: copy to s3
        run: aws s3 cp bootstrap.zip s3://${{ env.S3_BUCKET_NAME }}

      - name: update lambda function source
        run: |
          aws lambda update-function-code --function-name ${{ env.LAMBDA_FUNCTION_NAME }} --zip-file spotify-extension-src --s3-key bootstrap.zip --publish
